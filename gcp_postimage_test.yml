---
- hosts: localhost
  vars_files:
   - secrets.yml

  vars:
    gcp_project: your_project-pd54-shared
    gcp_cred_kind: serviceaccount
    gcp_cred_file: /root/.pyenv/gcp/.your_project-pd54-shared.json
    zone: "europe-west5-a"
    region: "europe-west5"
    password: "{{ secret.opsadmin }}"

  tasks:
  - set_fact:
     vm_name: "{{ image_name }}-test"

  - name: create a disk
    gcp_compute_disk:
         name: disk-{{ vm_name }}
         size_gb: 200
         source_image: 'projects/your_project-pd54-shared/global/images/{{ image_name }}'
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
    register: disk

  - name: create a address
    gcp_compute_address:
         name: address-{{ vm_name }}
         region: "{{ region }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         purpose: GCE_ENDPOINT 
         address_type: INTERNAL
         subnetwork: {selfLink: projects/your_project-site-eu/regions/europe-west5/subnetworks/ss54-delivery-tools-sbn}
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
    register: address

  - name: create a instance
    gcp_compute_instance:
         state: present
         name: "{{ vm_name }}"
         machine_type: n1-standard-2
         disks:
           - auto_delete: true
             boot: true
             source: "{{ disk }}"
         network_interfaces:
           - network: {selfLink: projects/your_project-site-eu/global/networks/dc54-shared-trust-vpc}
             subnetwork: {selfLink: projects/your_project-site-eu/regions/europe-west5/subnetworks/ss54-delivery-tools-sbn}
             network_ip: "{{ address.address }}"
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         metadata:
           windows-startup-script-cmd: "net user opsadmin {{ password }} /add & net localgroup administrators opsadmin /add & NET LOCALGROUP 'Remote Desktop Users' opsadmin /ADD & winrm quickconfig -quiet & winrm set winrm/config/service @{AllowUnencrypted=\"true\"} & winrm set winrm/config/service/auth @{Basic=\"true\"} & winrm set winrm/config/client/auth @{Basic=\"true\"}"
         scopes:
           - https://www.googleapis.com/auth/compute
    register: instance

  # wait 5 minutes for VM to spin up
  - name: "Waiting 5 minutes for {{ vm_name }} with ip {{ address.address }} to spin up..."
    pause:
       minutes: 5

  - set_fact:
       vm_ip: "{{ address.address }}"


  - set_fact:
      vm_ip: "{{ vm_ip }}"
      ansible_host: 10.235.192.149
      ansible_user: deployer
      ansible_connection: ssh
      ansible_ssh_user: deployer
      ansible_ssh_private_key_file: /home/deployer/.ssh/id_rsa
      ansible_python_interpreter: /home/deployer/.pyenv/shims/python

    # Calling stage4 post image build automation image testing on ss54afrundeck01
  - name: "Performing stage4 post image build image testing on  {{ vm_name }} with IP {{ vm_ip }}"
    shell:
      ansible-playbook -i "{{ vm_ip }}", -e "password={{ secret.opsadmin | regex_escape() }} vm_name={{ vm_name }} vm_ip={{ vm_ip }}" /home/roaming/manjesh/gcp/marketBuild/win_stage4.yml -vvvv
    vars:
      ansible_user: opsadmin

